#!/bin/bash
# Author: Erland@Hedmanshome.se

. "${DOCUMENT_ROOT}"/cgi-bin/functions

rval=0

case $1 in
    status)
        if ifconfig "${2}" &>/dev/null; then echo -n Enabled; else echo -n Disabled; fi
    ;;
    connect)
        ap=$(iwconfig "${2}" | grep 'Access Point:' | awk '{print "${6}"}')
        res=$?
        if [ "$ap" = "Not-Associated" ]; then echo -n "not connected"; else
        if [ $res -eq 0 ]; then echo -n connected; else echo -n not connected; fi fi
    ;;
    bitrate)
        br=$(hostapd_cli -i "${2}" all_sta | grep tx_rate_info= | cut -d= -f2 | awk  '{print $1}')
        if [ -n "$br" ]; then echo -n "$((br /10)) Mbit/s"; else echo -n "no connections"; fi
    ;;
    quality)
        sig=$(nmcli -f ssid,signal dev wifi | grep -m1 "${2}" | awk '{print "${2}"}')
        if [ -n "$sig" ]; then echo -n "$sig%"; else echo -n --; fi
    ;;
    keytype)
        kt=$(grep key_mgmt /etc/wpa_supplicant/wpa_supplicant.conf | cut -d= -f2)
        res=$?
        if [ "$kt" = "NONE" ]; then kt="WEP"; fi        
        if (( "$res" == 0 )); then echo -n "$kt"; else echo -n --; fi
    ;;
    rangecheck)
        do_rangecheck "${2}" "${3}" "${4}" "${5}"
    ;;
    setdbhome)
        do_dbhome "$@"
    ;;
    setdbrev)
        do_dbrev "$@"
    ;;
    updatedhcp)
        do_updatedhcp "${2}" "${3}"
    ;;
    ifopts)
        do_ifopts "$@"
    ;;
    wifopts)
        do_wifopts "$@"
    ;;
    setvrules)
        shift 1
        do_vrules "$@"
    ;;
    setddns)
        do_ddns "$@"
    ;;
    setvpn)
        do_vpn "$@"
    ;;
    setcifsdisk)
        do_cifs_disk "$@"
    ;;
    setcifs)
        do_cifs "$@"
    ;;
    sethostopts)
        do_hostopts "$@"
    ;;
    setfirewallts)
        do_firewall_ts "$@"
    ;;
    setfirewallfws)
        do_firewall_fws "$@"
    ;;
    setfirewallmasqif)
        do_firewall_masqif "$@"
    ;;
    wifilist)
        do_wifilist
    ;;
	setdbrecords)
		do_dbrecords "$@"
	;;
    setupdatedns)
        do_updatedns "$@"
    ;;
    fwlog)
        do_fwlog "$@"
    ;;
    uptime)
       p_uptime 
    ;;
    setstatic)
        do_setstatic "$@"
    ;;
    setdhcp)
        do_setdhcp "$@"
    ;;
    setwpapsk)
        do_setwpapsk "${2}" "${3}" "${4}" "${5}" "${6}"
    ;;
    setwep)
        do_setwep "${2}" "${3}" "${4}"
    ;;
    sethostapd)
        shift 1
        do_hostapd "$@"
    ;;
    setdhcpd)
        do_dhcpd "$@"
    ;;
    settransmission)
        shift 2
        do_transmission "$@"
    ;;
    *)
        echo -n "illegal command"
esac
exit $rval
